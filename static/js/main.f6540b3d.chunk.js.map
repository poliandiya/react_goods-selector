{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","getSelected","good","setState","getRemoved","includes","splice","indexOf","deleteGoods","allGoods","this","length","firsts","slice","last","join","className","type","onClick","window","location","reload","map","classNames","good__selected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAQMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAsGaC,E,4MAlGbC,MAAe,CACbC,cAAe,I,EAGjBC,YAAc,SAACC,GACb,EAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,S,EAI5CE,WAAa,SAACF,GACZ,IAAQF,EAAkB,EAAKD,MAAvBC,cAEJA,EAAcK,SAASH,KACzBF,EAAcM,OAAON,EAAcO,QAAQL,GAAO,GAElD,EAAKC,UAAS,SAACJ,GAAD,MAAY,CAAEC,cAAc,YAAKD,EAAMC,qB,EAIzDQ,YAAc,WACZ,EAAKL,SAAS,CAAEH,cAAe,M,4CAGjC,WAAU,IAEJS,EAFG,OACCT,EAAkBU,KAAKX,MAAvBC,cAOR,GAJ6B,IAAzBA,EAAcW,SAChBF,EAAQ,UAAMT,EAAc,KAG1BA,EAAcW,OAAS,EAAG,CAC5B,IAAMC,EAASZ,EAAca,MAAM,EAAGb,EAAcW,OAAS,GACvDG,EAAOd,EAAcA,EAAcW,OAAS,GAElDF,EAAQ,UAAMG,EAAOG,KAAK,MAAlB,gBAA+BD,GAGzC,OACE,sBAAKE,UAAU,MAAf,UACE,sBAAKA,UAAU,gCAAf,UACE,6BACGhB,EAAcW,OAAS,EAAvB,UACMF,EADN,gBAEG,sBAELT,EAAcW,OAAS,GACtB,wBACEK,UAAU,uBACVC,KAAK,SACLC,QAAS,WACP,EAAKV,cACLW,OAAOC,SAASC,UALpB,kBAYJ,qBAAKL,UAAU,QAAf,SACGnB,EAAgByB,KAAI,SAAApB,GAAI,OACvB,sBAAKc,UAAU,6BAAf,UACE,mBAEEA,UAAWO,IAAW,OACpB,CAAEC,eAAgBxB,EAAcK,SAASH,KAH7C,SAKGA,GAJIA,GAMP,sBAAKc,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKjB,YAAYC,IAJrB,iBASA,wBACEe,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKd,WAAWF,IAJpB,sC,GAjFEuB,IAAMC,WClBxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f6540b3d.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\ntype State = {\n  selectedGoods: string[],\n};\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: [],\n  };\n\n  getSelected = (good: string) => {\n    this.setState((state) => ({\n      selectedGoods: [...state.selectedGoods, good],\n    }));\n  };\n\n  getRemoved = (good: string) => {\n    const { selectedGoods } = this.state;\n\n    if (selectedGoods.includes(good)) {\n      selectedGoods.splice(selectedGoods.indexOf(good), 1);\n\n      this.setState((state) => ({ selectedGoods: [...state.selectedGoods] }));\n    }\n  };\n\n  deleteGoods = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n    let allGoods;\n\n    if (selectedGoods.length === 1) {\n      allGoods = `${selectedGoods[0]}`;\n    }\n\n    if (selectedGoods.length > 1) {\n      const firsts = selectedGoods.slice(0, selectedGoods.length - 1);\n      const last = selectedGoods[selectedGoods.length - 1];\n\n      allGoods = `${firsts.join(', ')} and ${last}`;\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"container container__selected\">\n          <h1>\n            {selectedGoods.length > 0\n              ? `${allGoods} is selected`\n              : 'No goods selected'}\n          </h1>\n          {selectedGoods.length > 0 && (\n            <button\n              className=\"button button__clear\"\n              type=\"button\"\n              onClick={() => {\n                this.deleteGoods();\n                window.location.reload();\n              }}\n            >\n              X\n            </button>\n          )}\n        </div>\n        <div className=\"goods\">\n          {goodsFromServer.map(good => (\n            <div className=\"container container__goods\">\n              <p\n                key={good}\n                className={classNames('good',\n                  { good__selected: selectedGoods.includes(good) })}\n              >\n                {good}\n              </p>\n              <div className=\"buttons\">\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={() => {\n                    this.getSelected(good);\n                  }}\n                >\n                  Add\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={() => {\n                    this.getRemoved(good);\n                  }}\n                >\n                  Remove\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}